name: Create branch when issue is assigned

on:
  issues:
    types: [assigned]

permissions:
  contents: write
  issues: write

jobs:
  create_branch:
    if: ${{ github.event.issue.state == 'open' && github.event.issue.assignee != null }}
    runs-on: ubuntu-latest
    steps:
      - name: Prepare branch name
        id: prep
        run: |
          TITLE="${{ github.event.issue.title }}"
          NUM="${{ github.event.issue.number }}"
          SLUG=$(printf "%s" "$TITLE" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g; s/^-+|-+$//g')
          BRANCH="issue/${NUM}-${SLUG}"
          echo "branch_name=${BRANCH}" >> $GITHUB_OUTPUT

      - name: Create branch
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const defaultBranch = context.payload.repository.default_branch;
            const branchName = "${{ steps.prep.outputs.branch_name }}";

            // get latest commit SHA
            const baseRef = await github.rest.git.getRef({
              owner, repo, ref: `heads/${defaultBranch}`,
            });
            const baseSha = baseRef.data.object.sha;

            // create branch if not exists
            try {
              await github.rest.git.createRef({
                owner, repo,
                ref: `refs/heads/${branchName}`,
                sha: baseSha,
              });
            } catch (e) {
              if (e.status !== 422) throw e; // ignore if already exists
            }

            const branchUrl = `https://github.com/${owner}/${repo}/tree/${encodeURIComponent(branchName)}`;

            await github.rest.issues.createComment({
              owner, repo,
              issue_number: context.issue.number,
              body: `Branch created: ${branchUrl}`
            });
